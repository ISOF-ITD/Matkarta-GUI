// utils is a collection of often used methods
//
// Documentation available at https://github.com/Limepark/common/tree/master/google-translate-integration.
//
// Copyright (C) 2013 Limepark AB
var lp = (function (exports, $) {
  var utils = exports.utils = exports.utils || {};

  utils.isOnlineMode = function () {
    return window.self === window.top;
  };

  return exports;
}(lp || {}, jQuery));

// Google translate
//
// Documentation available at https://github.com/Limepark/common/tree/master/google-translate-integration.
//
// Copyright (C) 2013 Limepark AB
(function($, utils) {
  $.fn.googleTranslate = function(options) {
    var parent, modal;

    if (utils.isOnlineMode()) {
      $('body').append('<div id="google-translate-modal"><div id="google-translate-modal-close"><a href="#">Close</a></div><div id="google_translate_element"></div><p>Use Google to translate the web site. We take no responsibility for the accuracy of the translation.</p></div>');
      $.getScript('//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit');

      // Show hide the modal window when the user clicks a link that goes to
      // translate.google*
      $(this).click(function(e) {
        e.preventDefault();

        if (!$('.goog-te-banner-frame').is(":visible")) {
          parent = $(this).parent();
          modal = $('#google-translate-modal');

          // Calculate position using the parent item and add the div last to work around overflow:hidden
          modal.css('top', parent.offset().top + parent.outerHeight());
          modal.css('left', parent.offset().left);
          $('body').append(modal);
          modal.show();
        }

        // Close the translate modal window when the user chooses language
        $('iframe.goog-te-menu-frame').contents().find('a').click(function(e) {
          $('#google-translate-modal').hide();
        });
      });

      $('#google-translate-modal-close').click(function() {
        $('#google-translate-modal').hide();
      });
    }
  };

  // The following is Google's code for website translating.
  // We are wrapping their div in our own #google-translate-modal though.
  // Customize your own at: http://translate.google.com/translate_tools?hl=en
  // We add it to window to make it global
  window.googleTranslateElementInit = function() {
    new google.translate.TranslateElement({
      pageLanguage: 'sv',
      autoDisplay: false,
      layout: google.translate.TranslateElement.InlineLayout.SIMPLE
    }, 'google_translate_element');
  }
})(jQuery, lp.utils);

// Creates tabs from a sitevision layout containing layouts. Each inner layout will become a tab
// The first h2 element is used as same for the tab if it exists
//
// Documentation available at https://github.com/Limepark/common/tree/master/svtabs.
//
//  Copyright (C) 2013 Limepark AB
(function($, utils) {
  $.fn.svtabs = function(options) {
    if (utils.isOnlineMode()) {
      $(this).each(function () {
         var element, panes, counter, tabs, headline, tabname;

         element = $(this);
         panes = $('> div > div', this);

         if (panes.length > 0) {
            counter = 1;
            tabs = $('<ul class="lp-tabs">');

            panes.each(function(i, pane) {
               headline = $('h2', pane).first();
               tabname = 'Flik ' + counter++;
               if (headline) {
                  tabname = headline.text();
                  headline.remove();
               }

               tab = $('<li class="lp-tab">' + tabname + '</li>');
               tab.click(function(e) {
                  element.find('.lp-tab').removeClass('lp-current');
                  panes.hide();
                  $(pane).show();
                  $(this).addClass('lp-current');
               });
               tabs.append(tab);
            });

            element.prepend(tabs);
            $(panes).wrapAll('<div class="lp-panes">');
            element.find('.lp-tab').first().click();
         }
      });
    }
  };
})(jQuery, lp.utils);

// Makes an area clickable, usable for blurbs and stuff like that. On click the
// user is redirected to the location of the first link inside the clickable
// area.
//
// Documentation available at https://github.com/Limepark/common/tree/master/clickable-area.
//
// Copyright (C) 2013 Limepark AB
(function($, utils) {
  if (utils.isOnlineMode()) {
    $('html').delegate('.lp-clickable-area', 'click', function (event) {
      var linkClicked = event.target.tagName.match(/^a$/i);

      if (!linkClicked) {
        $('a:first', this)[0].click();
      }
    });

    $('head').append('<style type="text/css">.lp-clickable-area { cursor: pointer; }</style>');
  }

  $.fn.clickableArea = function() {
    this.addClass('lp-clickable-area');
  };
})(jQuery, lp.utils);